server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/log/host.access.log  main;

    location / {
        port_in_redirect off;
        return 301 $scheme://$http_host/webapp;
    }

    location ~ ^/webapp {
        proxy_redirect off;
        proxy_pass       http://webapp:8888;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # socksjs-node used in dev by webpack-dev-server
    location ~ ^/sockjs-node {
        proxy_redirect off;
        proxy_pass       http://webapp:8888;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location ~ ^/kibana {
        proxy_redirect off;
        proxy_pass       http://kibana:5601;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        rewrite_log on;
        rewrite ^/kibana(/.*)$ $1 break;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
